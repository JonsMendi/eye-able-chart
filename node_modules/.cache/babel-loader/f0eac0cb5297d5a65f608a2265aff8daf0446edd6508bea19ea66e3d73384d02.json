{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JonsMendi\\\\Desktop\\\\Personal\\\\Coding-Challenges\\\\eye-able-chart\\\\eye-able-chart\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Funnel } from \"@nivo/funnel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [population, setPopulation] = useState([]);\n  const [yearFilter, setYearFilter] = useState(null);\n  async function fetchPopulation() {\n    const response = await fetch(\"https://datausa.io/api/data?drilldowns=Nation&measures=Population\");\n    const data = await response.json();\n    setPopulation(data.data);\n  }\n  useEffect(() => {\n    fetchPopulation();\n  }, []);\n  function handleYearFilterChange(event) {\n    setYearFilter(parseInt(event.target.value));\n  }\n  const renderPopulation = population.filter(item => yearFilter ? new Date(item.Year).getFullYear() >= new Date().getFullYear() - yearFilter : true).map(item => {\n    return {\n      stage: item.Nation,\n      count: item.Population\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"USA Population\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Filter by year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: \"\",\n        onChange: handleYearFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: null,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 3,\n          children: \"Last 3 years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"Last 5 years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Last 10 years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderPopulation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Funnel, {\n      width: 600,\n      height: 400,\n      data: renderPopulation,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      valueFormat: \".0%\",\n      label: _ref => {\n        let {\n          stage\n        } = _ref;\n        return `${stage}`;\n      },\n      colors: {\n        scheme: \"spectral\"\n      },\n      borderWidth: 2,\n      borderColor: {\n        from: \"color\",\n        modifiers: [[\"darker\", 0.2]]\n      },\n      animate: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"awamZj14csI5Gk1jLqW/+6VfeE4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Funnel","jsxDEV","_jsxDEV","App","_s","population","setPopulation","yearFilter","setYearFilter","fetchPopulation","response","fetch","data","json","handleYearFilterChange","event","parseInt","target","value","renderPopulation","filter","item","Date","Year","getFullYear","map","stage","Nation","count","Population","className","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","onChange","width","height","margin","top","right","bottom","left","valueFormat","label","_ref","colors","scheme","borderWidth","borderColor","from","modifiers","animate","_c","$RefreshReg$"],"sources":["C:/Users/JonsMendi/Desktop/Personal/Coding-Challenges/eye-able-chart/eye-able-chart/src/components/App.jsx"],"sourcesContent":["import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Funnel } from \"@nivo/funnel\";\n\nfunction App() {\n  const [population, setPopulation] = useState([]);\n  const [yearFilter, setYearFilter] = useState(null);\n\n  async function fetchPopulation() {\n    const response = await fetch(\n      \"https://datausa.io/api/data?drilldowns=Nation&measures=Population\"\n    );\n    const data = await response.json();\n    setPopulation(data.data);\n  }\n\n  useEffect(() => {\n    fetchPopulation();\n  }, []);\n\n  function handleYearFilterChange(event) {\n    setYearFilter(parseInt(event.target.value));\n  }\n\n  const renderPopulation = population\n    .filter(\n      (item) =>\n        yearFilter\n          ? new Date(item.Year).getFullYear() >=\n            new Date().getFullYear() - yearFilter\n          : true\n    )\n    .map((item) => {\n      return {\n        stage: item.Nation,\n        count: item.Population,\n      };\n    });\n\n  return (\n    <div className=\"App\">\n      <h1>USA Population</h1>\n      <label>\n        Filter by year:\n        <select defaultValue=\"\" onChange={handleYearFilterChange}>\n          <option value={null}>All</option>\n          <option value={3}>Last 3 years</option>\n          <option value={5}>Last 5 years</option>\n          <option value={10}>Last 10 years</option>\n        </select>\n      </label>\n      <div>{renderPopulation}</div>\n      <Funnel\n        width={600}\n        height={400}\n        data={renderPopulation}\n        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n        valueFormat=\".0%\"\n        label={({ stage }) => `${stage}`}\n        colors={{ scheme: \"spectral\" }}\n        borderWidth={2}\n        borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\n        animate={true}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}