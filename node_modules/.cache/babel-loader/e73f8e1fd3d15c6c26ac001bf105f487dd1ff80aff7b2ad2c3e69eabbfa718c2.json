{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JonsMendi\\\\Desktop\\\\Personal\\\\Coding-Challenges\\\\eye-able-chart\\\\eye-able-chart\\\\src\\\\components\\\\Body.jsx\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport BarChart from \"./Chart/BarChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Body() {\n  _s();\n  const [population, setPopulation] = useState([]);\n  const [yearFilter, setYearFilter] = useState(null);\n  const [userData, setUserData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Population\",\n      data: [],\n      backgroundColor: [\"black\"],\n      borderColor: \"gray\",\n      borderWidth: 2,\n      pointBackgroundColor: \"gray\",\n      pointBorderColor: \"#FD7751\",\n      pointBorderWidth: 6,\n      pointHoverBackgroundColor: \"#FFD866\",\n      pointHoverBorderColor: \"#FFD866\",\n      pointHoverRadius: 5,\n      pointRadius: 3\n    }]\n  });\n  async function fetchPopulation() {\n    const response = await fetch(\"https://datausa.io/api/data?drilldowns=Nation&measures=Population\");\n    const data = await response.json();\n    setPopulation(data.data);\n  }\n  useEffect(() => {\n    fetchPopulation();\n  }, []);\n  useEffect(() => {\n    if (population.length > 0) {\n      const filteredPopulation = population.filter(item => !yearFilter || new Date(item.Year).getFullYear() >= new Date().getFullYear() - yearFilter);\n      const labels = filteredPopulation.map(data => data.Year);\n      const data = filteredPopulation.map(data => data.Population);\n      setUserData(prevState => {\n        return {\n          ...prevState,\n          labels: labels,\n          datasets: [{\n            ...prevState.datasets[0],\n            data: data\n          }]\n        };\n      });\n    }\n  }, [yearFilter, population]);\n  function handleYearFilterChange(event) {\n    setYearFilter(parseInt(event.target.value));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"USA Population\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Filter by year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: 10,\n        onChange: handleYearFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 3,\n          children: \"Last 3 years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"Last 5 years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Last 10 years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      chartData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Body, \"MB2leXT5t2RxDK6c0SZY8GQPU/I=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["useState","useEffect","BarChart","jsxDEV","_jsxDEV","Body","_s","population","setPopulation","yearFilter","setYearFilter","userData","setUserData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverRadius","pointRadius","fetchPopulation","response","fetch","json","length","filteredPopulation","filter","item","Date","Year","getFullYear","map","Population","prevState","handleYearFilterChange","event","parseInt","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","onChange","chartData","_c","$RefreshReg$"],"sources":["C:/Users/JonsMendi/Desktop/Personal/Coding-Challenges/eye-able-chart/eye-able-chart/src/components/Body.jsx"],"sourcesContent":["import \"../App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport BarChart from \"./Chart/BarChart\";\r\n\r\nfunction Body() {\r\n  const [population, setPopulation] = useState([]);\r\n  const [yearFilter, setYearFilter] = useState(null);\r\n  const [userData, setUserData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Population\",\r\n      data: [],\r\n      backgroundColor: [\"black\"],\r\n      borderColor: \"gray\",\r\n      borderWidth: 2,\r\n      pointBackgroundColor: \"gray\",\r\n      pointBorderColor: \"#FD7751\",\r\n      pointBorderWidth: 6,\r\n      pointHoverBackgroundColor: \"#FFD866\",\r\n      pointHoverBorderColor: \"#FFD866\",\r\n      pointHoverRadius: 5,\r\n      pointRadius: 3\r\n      },\r\n    ],\r\n  });\r\n\r\n  async function fetchPopulation() {\r\n    const response = await fetch(\r\n      \"https://datausa.io/api/data?drilldowns=Nation&measures=Population\"\r\n    );\r\n    const data = await response.json();\r\n    setPopulation(data.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPopulation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (population.length > 0) {\r\n      const filteredPopulation = population.filter(\r\n        (item) =>\r\n          !yearFilter ||\r\n          new Date(item.Year).getFullYear() >=\r\n            new Date().getFullYear() - yearFilter\r\n      );\r\n      const labels = filteredPopulation.map((data) => data.Year);\r\n      const data = filteredPopulation.map((data) => data.Population);\r\n\r\n      setUserData((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              ...prevState.datasets[0],\r\n              data: data,\r\n            },\r\n          ],\r\n        };\r\n      });\r\n    }\r\n  }, [yearFilter, population]);\r\n\r\n  function handleYearFilterChange(event) {\r\n    setYearFilter(parseInt(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>USA Population</h1>\r\n      <label>\r\n        Filter by year:\r\n        <select defaultValue={10} onChange={handleYearFilterChange}>\r\n         {/*  <option value={null}>All</option> */}\r\n          <option value={3}>Last 3 years</option>\r\n          <option value={5}>Last 5 years</option>\r\n          <option value={10}>Last 10 years</option>\r\n        </select>\r\n      </label>\r\n      <BarChart chartData={userData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}