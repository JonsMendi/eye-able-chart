{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JonsMendi\\\\Desktop\\\\Personal\\\\Coding-Challenges\\\\eye-able-chart\\\\eye-able-chart\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport { useState, useEffect } from 'react';\nimport { Funnel } from '@nivo/funnel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [population, setPopulation] = useState([]);\n  const [yearFilter, setYearFilter] = useState(null);\n  const data = [{\n    stage: 'Visited website',\n    count: 2000\n  }, {\n    stage: 'Added product to cart',\n    count: 1500\n  }, {\n    stage: 'Started checkout',\n    count: 1000\n  }, {\n    stage: 'Completed checkout',\n    count: 500\n  }];\n  async function fetchPopulation() {\n    const response = await fetch('https://datausa.io/api/data?drilldowns=Nation&measures=Population');\n    const data = await response.json();\n    setPopulation(data.data);\n  }\n  useEffect(() => {\n    fetchPopulation();\n  }, []);\n  function handleYearFilterChange(event) {\n    setYearFilter(parseInt(event.target.value));\n  }\n  const renderPopulation = population.filter(item => yearFilter ? new Date(item.Year).getFullYear() >= new Date().getFullYear() - yearFilter : true).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Country: \", item.Nation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Population: \", item.Population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Year: \", item.Year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Funnel, {\n      width: 600,\n      height: 400,\n      data: data,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      valueFormat: \".0%\",\n      label: _ref => {\n        let {\n          stage\n        } = _ref;\n        return `${stage}`;\n      },\n      colors: {\n        scheme: 'spectral'\n      },\n      borderWidth: 2,\n      borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.2]]\n      },\n      animate: true,\n      tooltip: _ref2 => {\n        let {\n          id,\n          value\n        } = _ref2;\n        const filteredPopulation = renderPopulation.filter(item => item.Country === id && (yearFilter ? new Date(item.Year).getFullYear() >= new Date().getFullYear() - yearFilter : true));\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Stage: \", id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Value: \", value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: filteredPopulation.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Country: \", item.Country]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Population: \", item.Population]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Year: \", item.Year]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"awamZj14csI5Gk1jLqW/+6VfeE4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Funnel","jsxDEV","_jsxDEV","App","_s","population","setPopulation","yearFilter","setYearFilter","data","stage","count","fetchPopulation","response","fetch","json","handleYearFilterChange","event","parseInt","target","value","renderPopulation","filter","item","Date","Year","getFullYear","map","index","children","Nation","fileName","_jsxFileName","lineNumber","columnNumber","Population","className","width","height","margin","top","right","bottom","left","valueFormat","label","_ref","colors","scheme","borderWidth","borderColor","from","modifiers","animate","tooltip","_ref2","id","filteredPopulation","Country","_c","$RefreshReg$"],"sources":["C:/Users/JonsMendi/Desktop/Personal/Coding-Challenges/eye-able-chart/eye-able-chart/src/components/App.jsx"],"sourcesContent":["import '../App.css';\nimport { useState, useEffect } from 'react';\nimport { Funnel } from '@nivo/funnel';\n\n\n\nfunction App() {\n  const [population, setPopulation] = useState([]);\n  const [yearFilter, setYearFilter] = useState(null);\n\n  const data = [\n    { stage: 'Visited website', count: 2000 },\n    { stage: 'Added product to cart', count: 1500 },\n    { stage: 'Started checkout', count: 1000 },\n    { stage: 'Completed checkout', count: 500 },\n  ];\n\n  async function fetchPopulation() {\n    const response = await fetch('https://datausa.io/api/data?drilldowns=Nation&measures=Population');\n    const data = await response.json();\n    setPopulation(data.data);\n  }\n\n  useEffect(() => {\n    fetchPopulation();\n  }, []);\n\n  function handleYearFilterChange(event) {\n    setYearFilter(parseInt(event.target.value));\n  }\n\n  const renderPopulation = population\n    .filter(item => yearFilter ? new Date(item.Year).getFullYear() >= (new Date().getFullYear() - yearFilter) : true)\n    .map((item, index) => (\n      <div key={index}>\n        <span>Country: {item.Nation}</span>\n        <span>Population: {item.Population}</span>\n        <span>Year: {item.Year}</span>\n      </div>\n    ));\n\n  return (\n    <div className=\"App\">\n     <Funnel\n  width={600}\n  height={400}\n  data={data}\n  margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n  valueFormat=\".0%\"\n  label={({ stage }) => `${stage}`}\n  colors={{ scheme: 'spectral' }}\n  borderWidth={2}\n  borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n  animate={true}\n  tooltip={({ id, value }) => {\n    const filteredPopulation = renderPopulation.filter(\n      item => item.Country === id && (yearFilter ? new Date(item.Year).getFullYear() >= (new Date().getFullYear() - yearFilter) : true)\n    );\n    return (\n      <div>\n        <div>Stage: {id}</div>\n        <div>Value: {value}</div>\n        <div>\n          {filteredPopulation.map((item, index) => (\n            <div key={index}>\n              <span>Country: {item.Country}</span>\n              <span>Population: {item.Population}</span>\n              <span>Year: {item.Year}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }}\n/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}