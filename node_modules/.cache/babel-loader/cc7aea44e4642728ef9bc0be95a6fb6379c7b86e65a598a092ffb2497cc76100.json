{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JonsMendi\\\\Desktop\\\\Personal\\\\Coding-Challenges\\\\eye-able-chart\\\\eye-able-chart\\\\src\\\\components\\\\Body.jsx\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport Chart from \"./Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Body() {\n  _s();\n  const [population, setPopulation] = useState([]);\n  const [yearFilter, setYearFilter] = useState(10);\n  const [chartData, setChartData] = useState({\n    // Create state variable for chart data and its setter\n    labels: [],\n    datasets: [{\n      label: \"Population\",\n      data: [],\n      backgroundColor: [\"black\"],\n      borderColor: \"gray\",\n      borderWidth: 2,\n      pointBackgroundColor: \"black\",\n      pointBorderColor: \"#FD7751\",\n      pointBorderWidth: 4,\n      pointHoverBackgroundColor: \"#FFD866\",\n      pointHoverBorderColor: \"#FFD866\",\n      pointHoverRadius: 5,\n      pointRadius: 3\n    }]\n  });\n\n  /**\r\n   * Fetch the data from the API\r\n   */\n  async function fetchPopulation() {\n    const response = await fetch(\"https://datausa.io/api/data?drilldowns=Nation&measures=Population\");\n    const data = await response.json();\n    setPopulation(data.data);\n  }\n  useEffect(() => {\n    // Fetch the population data once when the component mounts\n    fetchPopulation();\n  }, []);\n  useEffect(() => {\n    // Check if there is population data available\n    if (population.length > 0) {\n      // Filter the population data based on the selected year filter\n      const filteredPopulation = population.filter(item => !yearFilter || new Date(item.Year).getFullYear() >= new Date().getFullYear() - yearFilter);\n      // Map the year data from the filtered population data to an array\n      const labels = filteredPopulation.map(data => data.Year);\n      // Map the population data from the filtered population data to an array\n      const data = filteredPopulation.map(data => data.Population);\n\n      // Update the chart data state variable with the new data\n      setChartData(prevState => {\n        return {\n          ...prevState,\n          labels: labels,\n          datasets: [{\n            ...prevState.datasets[0],\n            data: data\n          }]\n        };\n      });\n    }\n  }, [yearFilter, population]);\n\n  /**\r\n   * \r\n   * @param {*} event \r\n   * @param {*} value \r\n   */\n  // Update the year filter state variable when the user clicks on a filter button\n  function handleYearFilterChange(event, value) {\n    setYearFilter(parseInt(value));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-800 mt-10 \",\n      children: [\"United States of \", /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-red-600 border-2  relative inline-block\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"relative text-white\",\n          children: \"America\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 80\n      }, this), \"- Population\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex-grow w-full mt-10\",\n      children: [/*#__PURE__*/_jsxDEV(Chart, {\n        chartData: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center mt-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-lg font-bold mr-2 text-gray-800 mb-5\",\n          children: \"You can filter by years length:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleYearFilterChange(event, 3),\n            className: `p-2 text-lg rounded-md border-2 ${yearFilter === 3 ? \"bg-yellow-500 border-black text-black\" : \"bg-white border-black text-black\"} hover:bg-yellow-600 hover:transition-colors ease-in-out duration-300`,\n            children: \"Last 3 years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleYearFilterChange(event, 5),\n            className: `p-2 text-lg rounded-md border-2 ${yearFilter === 5 ? \"bg-orange-500 border-black text-black\" : \"bg-white border-black text-black\"} hover:bg-yellow-600 hover:transition-colors ease-in-out duration-300`,\n            children: \"Last 5 years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleYearFilterChange(event, 10),\n            className: `p-2 text-lg rounded-md border-2 ${yearFilter === 10 ? \"bg-orange-500 border-black text-black\" : \"bg-white border-black text-black\"} hover:bg-yellow-600 hover:transition-colors ease-in-out duration-300`,\n            children: \"Last 10 years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Body, \"qu56BxqEbLH6mRMg3bBtixdj1+Y=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["useState","useEffect","Chart","jsxDEV","_jsxDEV","Body","_s","population","setPopulation","yearFilter","setYearFilter","chartData","setChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverRadius","pointRadius","fetchPopulation","response","fetch","json","length","filteredPopulation","filter","item","Date","Year","getFullYear","map","Population","prevState","handleYearFilterChange","event","value","parseInt","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/JonsMendi/Desktop/Personal/Coding-Challenges/eye-able-chart/eye-able-chart/src/components/Body.jsx"],"sourcesContent":["import \"../App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Chart from \"./Chart/Chart\";\r\n\r\nfunction Body() {\r\n  const [population, setPopulation] = useState([]);\r\n  const [yearFilter, setYearFilter] = useState(10);\r\n  const [chartData, setChartData] = useState({\r\n    // Create state variable for chart data and its setter\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Population\",\r\n        data: [],\r\n        backgroundColor: [\"black\"],\r\n        borderColor: \"gray\",\r\n        borderWidth: 2,\r\n        pointBackgroundColor: \"black\",\r\n        pointBorderColor: \"#FD7751\",\r\n        pointBorderWidth: 4,\r\n        pointHoverBackgroundColor: \"#FFD866\",\r\n        pointHoverBorderColor: \"#FFD866\",\r\n        pointHoverRadius: 5,\r\n        pointRadius: 3,\r\n      },\r\n    ],\r\n  });\r\n\r\n  /**\r\n   * Fetch the data from the API\r\n   */\r\n  async function fetchPopulation() {\r\n    const response = await fetch(\r\n      \"https://datausa.io/api/data?drilldowns=Nation&measures=Population\"\r\n    );\r\n    const data = await response.json();\r\n    setPopulation(data.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Fetch the population data once when the component mounts\r\n    fetchPopulation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Check if there is population data available\r\n    if (population.length > 0) {\r\n    // Filter the population data based on the selected year filter\r\n      const filteredPopulation = population.filter(\r\n        (item) =>\r\n          !yearFilter ||\r\n          new Date(item.Year).getFullYear() >=\r\n            new Date().getFullYear() - yearFilter\r\n      );\r\n      // Map the year data from the filtered population data to an array\r\n      const labels = filteredPopulation.map((data) => data.Year);\r\n      // Map the population data from the filtered population data to an array\r\n      const data = filteredPopulation.map((data) => data.Population);\r\n\r\n      // Update the chart data state variable with the new data\r\n      setChartData((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              ...prevState.datasets[0],\r\n              data: data,\r\n            },\r\n          ],\r\n        };\r\n      });\r\n    }\r\n  }, [yearFilter, population]);\r\n\r\n  /**\r\n   * \r\n   * @param {*} event \r\n   * @param {*} value \r\n   */\r\n  // Update the year filter state variable when the user clicks on a filter button\r\n  function handleYearFilterChange(event, value) {\r\n    setYearFilter(parseInt(value));\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center\">\r\n      <h1 className=\"text-3xl font-bold text-gray-800 mt-10 \">United States of <span class=\"before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-red-600 border-2  relative inline-block\">\r\n          <span class=\"relative text-white\">America</span>\r\n        </span>- Population</h1>\r\n      <div className=\"relative flex-grow w-full mt-10\">\r\n        <Chart chartData={chartData} />\r\n        <div className=\"flex flex-col items-center justify-center mt-16\">\r\n          <label className=\"text-lg font-bold mr-2 text-gray-800 mb-5\">\r\n            You can filter by years length:\r\n          </label>\r\n          <div className=\"flex justify-center space-x-4\">\r\n            <button\r\n              onClick={(event) => handleYearFilterChange(event, 3)}\r\n              className={`p-2 text-lg rounded-md border-2 ${\r\n                yearFilter === 3\r\n                  ? \"bg-yellow-500 border-black text-black\"\r\n                  : \"bg-white border-black text-black\"\r\n              } hover:bg-yellow-600 hover:transition-colors ease-in-out duration-300`}\r\n            >\r\n              Last 3 years\r\n            </button>\r\n            <button\r\n              onClick={(event) => handleYearFilterChange(event, 5)}\r\n              className={`p-2 text-lg rounded-md border-2 ${\r\n                yearFilter === 5\r\n                  ? \"bg-orange-500 border-black text-black\"\r\n                  : \"bg-white border-black text-black\"\r\n              } hover:bg-yellow-600 hover:transition-colors ease-in-out duration-300`}\r\n            >\r\n              Last 5 years\r\n            </button>\r\n            <button\r\n              onClick={(event) => handleYearFilterChange(event, 10)}\r\n              className={`p-2 text-lg rounded-md border-2 ${\r\n                yearFilter === 10\r\n                  ? \"bg-orange-500 border-black text-black\"\r\n                  : \"bg-white border-black text-black\"\r\n              } hover:bg-yellow-600 hover:transition-colors ease-in-out duration-300`}\r\n            >\r\n              Last 10 years\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}