{"ast":null,"code":"import { useMemo as r, useState as e, createElement as t, Fragment as o } from \"react\";\nimport { MotionConfigProvider as a, useTheme as n, useValueFormatter as i, useMotionConfig as s, useAnimatedPath as p, Container as l, useDimensions as d, SvgWrapper as u, ResponsiveWrapper as f } from \"@nivo/core\";\nimport { area as c, curveBasis as h, curveLinear as v, line as y } from \"d3-shape\";\nimport { scaleLinear as b } from \"d3-scale\";\nimport { useOrdinalColorScale as x, useInheritedColor as m } from \"@nivo/colors\";\nimport { useAnnotations as g, Annotation as S } from \"@nivo/annotations\";\nimport { BasicTooltip as P, useTooltip as C } from \"@nivo/tooltip\";\nimport { jsx as O, jsxs as M, Fragment as L } from \"react/jsx-runtime\";\nimport { useSpring as I, animated as w } from \"@react-spring/web\";\nfunction B() {\n  return B = Object.assign || function (r) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (r[o] = t[o]);\n    }\n    return r;\n  }, B.apply(this, arguments);\n}\nvar E = {\n    layers: [\"separators\", \"parts\", \"labels\", \"annotations\"],\n    direction: \"vertical\",\n    interpolation: \"smooth\",\n    spacing: 0,\n    shapeBlending: .66,\n    colors: {\n      scheme: \"nivo\"\n    },\n    fillOpacity: 1,\n    borderWidth: 6,\n    borderColor: {\n      from: \"color\"\n    },\n    borderOpacity: .66,\n    enableLabel: !0,\n    labelColor: {\n      theme: \"background\"\n    },\n    enableBeforeSeparators: !0,\n    beforeSeparatorLength: 0,\n    beforeSeparatorOffset: 0,\n    enableAfterSeparators: !0,\n    afterSeparatorLength: 0,\n    afterSeparatorOffset: 0,\n    annotations: [],\n    isInteractive: !0,\n    currentPartSizeExtension: 0,\n    role: \"img\",\n    animate: a.defaultProps.animate,\n    motionConfig: a.defaultProps.config\n  },\n  W = function (r) {\n    var e = r.part;\n    return O(P, {\n      id: e.data.label,\n      value: e.formattedValue,\n      color: e.color,\n      enableChip: !0\n    });\n  },\n  G = function (r, e) {\n    var t = c();\n    return \"vertical\" === e ? t.curve(\"smooth\" === r ? h : v).x0(function (r) {\n      return r.x0;\n    }).x1(function (r) {\n      return r.x1;\n    }).y(function (r) {\n      return r.y;\n    }) : t.curve(\"smooth\" === r ? h : v).y0(function (r) {\n      return r.y0;\n    }).y1(function (r) {\n      return r.y1;\n    }).x(function (r) {\n      return r.x;\n    }), [t, y().defined(function (r) {\n      return null !== r;\n    }).x(function (r) {\n      return r.x;\n    }).y(function (r) {\n      return r.y;\n    }).curve(\"smooth\" === r ? h : v)];\n  },\n  k = function (r) {\n    var e,\n      t,\n      o = r.data,\n      a = r.direction,\n      n = r.width,\n      i = r.height,\n      s = r.spacing;\n    \"vertical\" === a ? (e = i, t = n) : (e = n, t = i);\n    var p = (e - s * (o.length - 1)) / o.length,\n      l = function (r) {\n        return s * r + p * r;\n      };\n    l.bandwidth = p;\n    var d = o.map(function (r) {\n      return r.value;\n    });\n    return [l, b().domain([0, Math.max.apply(Math, d)]).range([0, t])];\n  },\n  A = function (r) {\n    var e = r.parts,\n      t = r.direction,\n      o = r.width,\n      a = r.height,\n      n = r.spacing,\n      i = r.enableBeforeSeparators,\n      s = r.beforeSeparatorOffset,\n      p = r.enableAfterSeparators,\n      l = r.afterSeparatorOffset,\n      d = [],\n      u = [],\n      f = e[e.length - 1];\n    if (\"vertical\" === t) {\n      e.forEach(function (r) {\n        var e = r.y0 - n / 2;\n        i && d.push({\n          partId: r.data.id,\n          x0: 0,\n          x1: r.x0 - s,\n          y0: e,\n          y1: e\n        }), p && u.push({\n          partId: r.data.id,\n          x0: r.x1 + l,\n          x1: o,\n          y0: e,\n          y1: e\n        });\n      });\n      var c = f.y1;\n      i && d.push(B({}, d[d.length - 1], {\n        partId: \"none\",\n        y0: c,\n        y1: c\n      })), p && u.push(B({}, u[u.length - 1], {\n        partId: \"none\",\n        y0: c,\n        y1: c\n      }));\n    } else if (\"horizontal\" === t) {\n      e.forEach(function (r) {\n        var e = r.x0 - n / 2;\n        d.push({\n          partId: r.data.id,\n          x0: e,\n          x1: e,\n          y0: 0,\n          y1: r.y0 - s\n        }), u.push({\n          partId: r.data.id,\n          x0: e,\n          x1: e,\n          y0: r.y1 + l,\n          y1: a\n        });\n      });\n      var h = f.x1;\n      d.push(B({}, d[d.length - 1], {\n        partId: \"none\",\n        x0: h,\n        x1: h\n      })), u.push(B({}, u[u.length - 1], {\n        partId: \"none\",\n        x0: h,\n        x1: h\n      }));\n    }\n    return [d, u];\n  },\n  z = function (r) {\n    var e = r.parts,\n      o = r.setCurrentPartId,\n      a = r.isInteractive,\n      n = r.onMouseEnter,\n      i = r.onMouseLeave,\n      s = r.onMouseMove,\n      p = r.onClick,\n      l = r.showTooltipFromEvent,\n      d = r.hideTooltip,\n      u = r.tooltip,\n      f = void 0 === u ? W : u;\n    return a ? e.map(function (r) {\n      return B({}, r, {\n        onMouseEnter: function (e) {\n          o(r.data.id), l(t(f, {\n            part: r\n          }), e), void 0 !== n && n(r, e);\n        },\n        onMouseLeave: function (e) {\n          o(null), d(), void 0 !== i && i(r, e);\n        },\n        onMouseMove: function (e) {\n          l(t(f, {\n            part: r\n          }), e), void 0 !== s && s(r, e);\n        },\n        onClick: void 0 !== p ? function (e) {\n          p(r, e);\n        } : void 0\n      });\n    }) : e;\n  },\n  F = function (t) {\n    var o,\n      a,\n      s = t.data,\n      p = t.width,\n      l = t.height,\n      d = t.direction,\n      u = void 0 === d ? E.direction : d,\n      f = t.interpolation,\n      c = void 0 === f ? E.interpolation : f,\n      h = t.spacing,\n      v = void 0 === h ? E.spacing : h,\n      y = t.shapeBlending,\n      b = void 0 === y ? E.shapeBlending : y,\n      g = t.valueFormat,\n      S = t.colors,\n      P = void 0 === S ? E.colors : S,\n      O = t.fillOpacity,\n      M = void 0 === O ? E.fillOpacity : O,\n      L = t.borderWidth,\n      I = void 0 === L ? E.borderWidth : L,\n      w = t.borderColor,\n      W = void 0 === w ? E.borderColor : w,\n      F = t.borderOpacity,\n      T = void 0 === F ? E.borderOpacity : F,\n      j = t.labelColor,\n      D = void 0 === j ? E.labelColor : j,\n      V = t.enableBeforeSeparators,\n      H = void 0 === V ? E.enableBeforeSeparators : V,\n      q = t.beforeSeparatorLength,\n      J = void 0 === q ? E.beforeSeparatorLength : q,\n      K = t.beforeSeparatorOffset,\n      N = void 0 === K ? E.beforeSeparatorOffset : K,\n      Q = t.enableAfterSeparators,\n      R = void 0 === Q ? E.enableAfterSeparators : Q,\n      U = t.afterSeparatorLength,\n      X = void 0 === U ? E.afterSeparatorLength : U,\n      Y = t.afterSeparatorOffset,\n      Z = void 0 === Y ? E.afterSeparatorOffset : Y,\n      $ = t.isInteractive,\n      _ = void 0 === $ ? E.isInteractive : $,\n      rr = t.currentPartSizeExtension,\n      er = void 0 === rr ? E.currentPartSizeExtension : rr,\n      tr = t.currentBorderWidth,\n      or = t.onMouseEnter,\n      ar = t.onMouseMove,\n      nr = t.onMouseLeave,\n      ir = t.onClick,\n      sr = t.tooltip,\n      pr = n(),\n      lr = x(P, \"id\"),\n      dr = m(W, pr),\n      ur = m(D, pr),\n      fr = i(g),\n      cr = r(function () {\n        return G(c, u);\n      }, [c, u]),\n      hr = cr[0],\n      vr = cr[1],\n      yr = H ? J + N : 0,\n      br = R ? X + Z : 0;\n    \"vertical\" === u ? (o = p - yr - br, a = l) : (o = p, a = l - yr - br);\n    var xr = r(function () {\n        return k({\n          data: s,\n          direction: u,\n          width: o,\n          height: a,\n          spacing: v\n        });\n      }, [s, u, o, a, v]),\n      mr = xr[0],\n      gr = xr[1],\n      Sr = e(null),\n      Pr = Sr[0],\n      Cr = Sr[1],\n      Or = r(function () {\n        var r = s.map(function (r, e) {\n            var t,\n              n,\n              i,\n              s,\n              p = r.id === Pr;\n            \"vertical\" === u ? (t = gr(r.value), n = mr.bandwidth, s = yr + .5 * (o - t), i = mr(e)) : (t = mr.bandwidth, n = gr(r.value), s = mr(e), i = yr + .5 * (a - n));\n            var l = s + t,\n              d = s + .5 * t,\n              f = i + n,\n              c = i + .5 * n,\n              h = {\n                data: r,\n                width: t,\n                height: n,\n                color: lr(r),\n                fillOpacity: M,\n                borderWidth: p && void 0 !== tr ? tr : I,\n                borderOpacity: T,\n                formattedValue: fr(r.value),\n                isCurrent: p,\n                x: d,\n                x0: s,\n                x1: l,\n                y: c,\n                y0: i,\n                y1: f,\n                borderColor: \"\",\n                labelColor: \"\",\n                points: [],\n                areaPoints: [],\n                borderPoints: []\n              };\n            return h.borderColor = dr(h), h.labelColor = ur(h), h;\n          }),\n          e = b / 2;\n        return r.forEach(function (t, o) {\n          var a = r[o + 1];\n          if (\"vertical\" === u) {\n            t.points.push({\n              x: t.x0,\n              y: t.y0\n            }), t.points.push({\n              x: t.x1,\n              y: t.y0\n            }), a ? (t.points.push({\n              x: a.x1,\n              y: t.y1\n            }), t.points.push({\n              x: a.x0,\n              y: t.y1\n            })) : (t.points.push({\n              x: t.points[1].x,\n              y: t.y1\n            }), t.points.push({\n              x: t.points[0].x,\n              y: t.y1\n            })), t.isCurrent && (t.points[0].x -= er, t.points[1].x += er, t.points[2].x += er, t.points[3].x -= er), t.areaPoints = [{\n              x: 0,\n              x0: t.points[0].x,\n              x1: t.points[1].x,\n              y: t.y0,\n              y0: 0,\n              y1: 0\n            }], t.areaPoints.push(B({}, t.areaPoints[0], {\n              y: t.y0 + t.height * e\n            }));\n            var n = {\n              x: 0,\n              x0: t.points[3].x,\n              x1: t.points[2].x,\n              y: t.y1,\n              y0: 0,\n              y1: 0\n            };\n            t.areaPoints.push(B({}, n, {\n              y: t.y1 - t.height * e\n            })), t.areaPoints.push(n), [0, 1, 2, 3].map(function (r) {\n              t.borderPoints.push({\n                x: t.areaPoints[r].x0,\n                y: t.areaPoints[r].y\n              });\n            }), t.borderPoints.push(null), [3, 2, 1, 0].map(function (r) {\n              t.borderPoints.push({\n                x: t.areaPoints[r].x1,\n                y: t.areaPoints[r].y\n              });\n            });\n          } else {\n            t.points.push({\n              x: t.x0,\n              y: t.y0\n            }), a ? (t.points.push({\n              x: t.x1,\n              y: a.y0\n            }), t.points.push({\n              x: t.x1,\n              y: a.y1\n            })) : (t.points.push({\n              x: t.x1,\n              y: t.y0\n            }), t.points.push({\n              x: t.x1,\n              y: t.y1\n            })), t.points.push({\n              x: t.x0,\n              y: t.y1\n            }), t.isCurrent && (t.points[0].y -= er, t.points[1].y -= er, t.points[2].y += er, t.points[3].y += er), t.areaPoints = [{\n              x: t.x0,\n              x0: 0,\n              x1: 0,\n              y: 0,\n              y0: t.points[0].y,\n              y1: t.points[3].y\n            }], t.areaPoints.push(B({}, t.areaPoints[0], {\n              x: t.x0 + t.width * e\n            }));\n            var i = {\n              x: t.x1,\n              x0: 0,\n              x1: 0,\n              y: 0,\n              y0: t.points[1].y,\n              y1: t.points[2].y\n            };\n            t.areaPoints.push(B({}, i, {\n              x: t.x1 - t.width * e\n            })), t.areaPoints.push(i), [0, 1, 2, 3].map(function (r) {\n              t.borderPoints.push({\n                x: t.areaPoints[r].x,\n                y: t.areaPoints[r].y0\n              });\n            }), t.borderPoints.push(null), [3, 2, 1, 0].map(function (r) {\n              t.borderPoints.push({\n                x: t.areaPoints[r].x,\n                y: t.areaPoints[r].y1\n              });\n            });\n          }\n        }), r;\n      }, [s, u, gr, mr, o, a, yr, br, b, lr, fr, dr, ur, Pr]),\n      Mr = C(),\n      Lr = Mr.showTooltipFromEvent,\n      Ir = Mr.hideTooltip,\n      wr = r(function () {\n        return z({\n          parts: Or,\n          setCurrentPartId: Cr,\n          isInteractive: _,\n          onMouseEnter: or,\n          onMouseLeave: nr,\n          onMouseMove: ar,\n          onClick: ir,\n          showTooltipFromEvent: Lr,\n          hideTooltip: Ir,\n          tooltip: sr\n        });\n      }, [Or, Cr, _, or, nr, ar, ir, Lr, Ir, sr]),\n      Br = r(function () {\n        return A({\n          parts: Or,\n          direction: u,\n          width: p,\n          height: l,\n          spacing: v,\n          enableBeforeSeparators: H,\n          beforeSeparatorOffset: N,\n          enableAfterSeparators: R,\n          afterSeparatorOffset: Z\n        });\n      }, [Or, u, p, l, v, H, N, R, Z]),\n      Er = Br[0],\n      Wr = Br[1],\n      Gr = r(function () {\n        return {\n          width: p,\n          height: l,\n          parts: wr,\n          areaGenerator: hr,\n          borderGenerator: vr,\n          beforeSeparators: Er,\n          afterSeparators: Wr,\n          setCurrentPartId: Cr\n        };\n      }, [p, l, wr, hr, vr, Er, Wr, Cr]);\n    return {\n      parts: wr,\n      areaGenerator: hr,\n      borderGenerator: vr,\n      beforeSeparators: Er,\n      afterSeparators: Wr,\n      setCurrentPartId: Cr,\n      currentPartId: Pr,\n      customLayerProps: Gr\n    };\n  },\n  T = function (r, e) {\n    return g({\n      data: r,\n      annotations: e,\n      getPosition: function (r) {\n        return {\n          x: r.x,\n          y: r.y\n        };\n      },\n      getDimensions: function (r) {\n        var e = r.width,\n          t = r.height;\n        return {\n          size: Math.max(e, t),\n          width: e,\n          height: t\n        };\n      }\n    });\n  },\n  j = function (r) {\n    var e = r.part,\n      t = r.areaGenerator,\n      o = r.borderGenerator,\n      a = s(),\n      n = a.animate,\n      i = a.config,\n      l = p(t(e.areaPoints)),\n      d = p(o(e.borderPoints)),\n      u = I({\n        areaColor: e.color,\n        borderWidth: e.borderWidth,\n        borderColor: e.borderColor,\n        config: i,\n        immediate: !n\n      });\n    return M(L, {\n      children: [e.borderWidth > 0 && O(w.path, {\n        d: d,\n        stroke: u.borderColor,\n        strokeWidth: u.borderWidth,\n        strokeOpacity: e.borderOpacity,\n        fill: \"none\"\n      }), O(w.path, {\n        d: l,\n        fill: u.areaColor,\n        fillOpacity: e.fillOpacity,\n        onMouseEnter: e.onMouseEnter,\n        onMouseLeave: e.onMouseLeave,\n        onMouseMove: e.onMouseMove,\n        onClick: e.onClick\n      })]\n    });\n  },\n  D = function (r) {\n    var e = r.parts,\n      t = r.areaGenerator,\n      o = r.borderGenerator;\n    return O(L, {\n      children: e.map(function (r) {\n        return O(j, {\n          part: r,\n          areaGenerator: t,\n          borderGenerator: o\n        }, r.data.id);\n      })\n    });\n  },\n  V = function (r) {\n    var e = r.part,\n      t = n(),\n      o = s(),\n      a = o.animate,\n      i = o.config,\n      p = I({\n        transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n        color: e.labelColor,\n        config: i,\n        immediate: !a\n      });\n    return O(w.g, {\n      transform: p.transform,\n      children: O(w.text, {\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        style: B({}, t.labels.text, {\n          fill: p.color,\n          pointerEvents: \"none\"\n        }),\n        children: e.formattedValue\n      })\n    });\n  },\n  H = function (r) {\n    var e = r.parts;\n    return O(L, {\n      children: e.map(function (r) {\n        return O(V, {\n          part: r\n        }, r.data.id);\n      })\n    });\n  },\n  q = function (r) {\n    var e = r.separator,\n      t = n(),\n      o = s(),\n      a = o.animate,\n      i = o.config,\n      p = I({\n        x1: e.x0,\n        x2: e.x1,\n        y1: e.y0,\n        y2: e.y1,\n        config: i,\n        immediate: !a\n      });\n    return O(w.line, B({\n      x1: p.x1,\n      x2: p.x2,\n      y1: p.y1,\n      y2: p.y2,\n      fill: \"none\"\n    }, t.grid.line));\n  },\n  J = function (r) {\n    var e = r.beforeSeparators,\n      t = r.afterSeparators;\n    return M(L, {\n      children: [e.map(function (r) {\n        return O(q, {\n          separator: r\n        }, r.partId);\n      }), t.map(function (r) {\n        return O(q, {\n          separator: r\n        }, r.partId);\n      })]\n    });\n  },\n  K = function (r) {\n    var e = r.parts,\n      t = r.annotations,\n      o = T(e, t);\n    return O(L, {\n      children: o.map(function (r, e) {\n        return O(S, B({}, r), e);\n      })\n    });\n  },\n  N = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  Q = function (r) {\n    var e = r.data,\n      a = r.width,\n      n = r.height,\n      i = r.margin,\n      s = r.direction,\n      p = void 0 === s ? E.direction : s,\n      l = r.interpolation,\n      f = void 0 === l ? E.interpolation : l,\n      c = r.spacing,\n      h = void 0 === c ? E.spacing : c,\n      v = r.shapeBlending,\n      y = void 0 === v ? E.shapeBlending : v,\n      b = r.valueFormat,\n      x = r.colors,\n      m = void 0 === x ? E.colors : x,\n      g = r.fillOpacity,\n      S = void 0 === g ? E.fillOpacity : g,\n      P = r.borderWidth,\n      C = void 0 === P ? E.borderWidth : P,\n      M = r.borderColor,\n      L = void 0 === M ? E.borderColor : M,\n      I = r.borderOpacity,\n      w = void 0 === I ? E.borderOpacity : I,\n      B = r.enableLabel,\n      W = void 0 === B ? E.enableLabel : B,\n      G = r.labelColor,\n      k = void 0 === G ? E.labelColor : G,\n      A = r.enableBeforeSeparators,\n      z = void 0 === A ? E.enableBeforeSeparators : A,\n      T = r.beforeSeparatorLength,\n      j = void 0 === T ? E.beforeSeparatorLength : T,\n      V = r.beforeSeparatorOffset,\n      q = void 0 === V ? E.beforeSeparatorOffset : V,\n      N = r.enableAfterSeparators,\n      Q = void 0 === N ? E.enableAfterSeparators : N,\n      R = r.afterSeparatorLength,\n      U = void 0 === R ? E.afterSeparatorLength : R,\n      X = r.afterSeparatorOffset,\n      Y = void 0 === X ? E.afterSeparatorOffset : X,\n      Z = r.layers,\n      $ = void 0 === Z ? E.layers : Z,\n      _ = r.annotations,\n      rr = void 0 === _ ? E.annotations : _,\n      er = r.isInteractive,\n      tr = void 0 === er ? E.isInteractive : er,\n      or = r.currentPartSizeExtension,\n      ar = void 0 === or ? E.currentPartSizeExtension : or,\n      nr = r.currentBorderWidth,\n      ir = r.onMouseEnter,\n      sr = r.onMouseMove,\n      pr = r.onMouseLeave,\n      lr = r.onClick,\n      dr = r.tooltip,\n      ur = r.role,\n      fr = void 0 === ur ? E.role : ur,\n      cr = r.ariaLabel,\n      hr = r.ariaLabelledBy,\n      vr = r.ariaDescribedBy,\n      yr = d(a, n, i),\n      br = yr.margin,\n      xr = yr.innerWidth,\n      mr = yr.innerHeight,\n      gr = yr.outerWidth,\n      Sr = yr.outerHeight,\n      Pr = F({\n        data: e,\n        width: xr,\n        height: mr,\n        direction: p,\n        interpolation: f,\n        spacing: h,\n        shapeBlending: y,\n        valueFormat: b,\n        colors: m,\n        fillOpacity: S,\n        borderWidth: C,\n        borderColor: L,\n        borderOpacity: w,\n        labelColor: k,\n        enableBeforeSeparators: z,\n        beforeSeparatorLength: j,\n        beforeSeparatorOffset: q,\n        enableAfterSeparators: Q,\n        afterSeparatorLength: U,\n        afterSeparatorOffset: Y,\n        isInteractive: tr,\n        currentPartSizeExtension: ar,\n        currentBorderWidth: nr,\n        onMouseEnter: ir,\n        onMouseMove: sr,\n        onMouseLeave: pr,\n        onClick: lr,\n        tooltip: dr\n      }),\n      Cr = Pr.areaGenerator,\n      Or = Pr.borderGenerator,\n      Mr = Pr.parts,\n      Lr = Pr.beforeSeparators,\n      Ir = Pr.afterSeparators,\n      wr = Pr.customLayerProps,\n      Br = {\n        separators: null,\n        parts: null,\n        annotations: null,\n        labels: null\n      };\n    return $.includes(\"separators\") && (Br.separators = O(J, {\n      beforeSeparators: Lr,\n      afterSeparators: Ir\n    }, \"separators\")), $.includes(\"parts\") && (Br.parts = O(D, {\n      parts: Mr,\n      areaGenerator: Cr,\n      borderGenerator: Or\n    }, \"parts\")), null != $ && $.includes(\"annotations\") && (Br.annotations = O(K, {\n      parts: Mr,\n      annotations: rr\n    }, \"annotations\")), $.includes(\"labels\") && W && (Br.labels = O(H, {\n      parts: Mr\n    }, \"labels\")), O(u, {\n      width: gr,\n      height: Sr,\n      margin: br,\n      role: fr,\n      ariaLabel: cr,\n      ariaLabelledBy: hr,\n      ariaDescribedBy: vr,\n      children: $.map(function (r, e) {\n        var a;\n        return \"function\" == typeof r ? O(o, {\n          children: t(r, wr)\n        }, e) : null != (a = null == Br ? void 0 : Br[r]) ? a : null;\n      })\n    });\n  },\n  R = function (r) {\n    var e = r.isInteractive,\n      t = void 0 === e ? E.isInteractive : e,\n      o = r.animate,\n      a = void 0 === o ? E.animate : o,\n      n = r.motionConfig,\n      i = void 0 === n ? E.motionConfig : n,\n      s = r.theme,\n      p = r.renderWrapper,\n      d = function (r, e) {\n        if (null == r) return {};\n        var t,\n          o,\n          a = {},\n          n = Object.keys(r);\n        for (o = 0; o < n.length; o++) t = n[o], e.indexOf(t) >= 0 || (a[t] = r[t]);\n        return a;\n      }(r, N);\n    return O(l, {\n      animate: a,\n      isInteractive: t,\n      motionConfig: i,\n      renderWrapper: p,\n      theme: s,\n      children: O(Q, B({\n        isInteractive: t\n      }, d))\n    });\n  },\n  U = function (r) {\n    return O(f, {\n      children: function (e) {\n        var t = e.width,\n          o = e.height;\n        return O(R, B({\n          width: t,\n          height: o\n        }, r));\n      }\n    });\n  };\nexport { R as Funnel, U as ResponsiveFunnel, z as computePartsHandlers, k as computeScales, A as computeSeparators, G as computeShapeGenerators, E as svgDefaultProps, F as useFunnel, T as useFunnelAnnotations };","map":{"version":3,"names":["E","layers","direction","interpolation","spacing","shapeBlending","colors","scheme","fillOpacity","borderWidth","borderColor","from","borderOpacity","enableLabel","labelColor","theme","enableBeforeSeparators","beforeSeparatorLength","beforeSeparatorOffset","enableAfterSeparators","afterSeparatorLength","afterSeparatorOffset","annotations","isInteractive","currentPartSizeExtension","role","animate","a","defaultProps","motionConfig","config","W","PartTooltip","r","e","part","O","P","id","data","label","value","formattedValue","color","enableChip","G","computeShapeGenerators","t","c","curve","h","v","x0","x1","y","y0","y1","x","defined","k","computeScales","o","n","width","i","height","s","p","length","l","bandScale","bandwidth","d","map","b","domain","Math","max","apply","range","A","computeSeparators","parts","u","f","forEach","push","partId","B","z","computePartsHandlers","setCurrentPartId","onMouseEnter","onMouseLeave","onMouseMove","onClick","showTooltipFromEvent","hideTooltip","tooltip","F","useFunnel","g","valueFormat","S","M","L","I","w","T","j","D","V","H","q","J","K","N","Q","R","U","X","Y","Z","$","_","rr","er","tr","currentBorderWidth","or","ar","nr","ir","sr","pr","lr","dr","m","ur","fr","cr","hr","vr","yr","br","xr","mr","gr","Sr","Pr","Cr","Or","isCurrent","points","areaPoints","borderPoints","Mr","C","Lr","Ir","wr","Br","Er","Wr","Gr","areaGenerator","borderGenerator","beforeSeparators","afterSeparators","currentPartId","customLayerProps","useFunnelAnnotations","getPosition","getDimensions","size","Part","areaColor","immediate","children","path","stroke","strokeWidth","strokeOpacity","fill","Parts","PartLabel","transform","text","textAnchor","dominantBaseline","style","labels","pointerEvents","PartLabels","Separator","separator","x2","y2","line","grid","Separators","FunnelAnnotations","InnerFunnel","margin","ariaLabel","ariaLabelledBy","ariaDescribedBy","innerWidth","innerHeight","outerWidth","outerHeight","separators","includes","Funnel","renderWrapper","Object","keys","indexOf","ResponsiveFunnel","ResponsiveWrapper","svgDefaultProps"],"sources":["C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\props.tsx","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\PartTooltip.tsx","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\hooks.ts","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\Part.tsx","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\Parts.tsx","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\PartLabel.tsx","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\PartLabels.tsx","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\Separator.tsx","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\Separators.tsx","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\FunnelAnnotations.tsx","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\Funnel.tsx","C:\\Users\\JonsMendi\\Desktop\\Personal\\Coding-Challenges\\eye-able-chart\\eye-able-chart\\node_modules\\@nivo\\funnel\\src\\ResponsiveFunnel.tsx"],"sourcesContent":["// @ts-ignore\nimport { MotionConfigProvider } from '@nivo/core'\nimport { FunnelLayerId } from './types'\n\nexport const svgDefaultProps = {\n    layers: ['separators', 'parts', 'labels', 'annotations'] as FunnelLayerId[],\n\n    direction: 'vertical' as const,\n    interpolation: 'smooth' as const,\n    spacing: 0,\n    shapeBlending: 0.66,\n\n    colors: { scheme: 'nivo' as const },\n    fillOpacity: 1,\n\n    borderWidth: 6,\n    borderColor: { from: 'color' },\n    borderOpacity: 0.66,\n\n    enableLabel: true,\n    labelColor: { theme: 'background' },\n\n    enableBeforeSeparators: true,\n    beforeSeparatorLength: 0,\n    beforeSeparatorOffset: 0,\n    enableAfterSeparators: true,\n    afterSeparatorLength: 0,\n    afterSeparatorOffset: 0,\n\n    annotations: [],\n\n    isInteractive: true,\n    currentPartSizeExtension: 0,\n\n    role: 'img',\n\n    animate: MotionConfigProvider.defaultProps.animate,\n    motionConfig: MotionConfigProvider.defaultProps.config,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { FunnelDatum, FunnelPartWithHandlers } from './types'\n\nexport interface PartTooltipProps<D extends FunnelDatum> {\n    part: FunnelPartWithHandlers<D>\n}\n\nexport const PartTooltip = <D extends FunnelDatum>({ part }: PartTooltipProps<D>) => (\n    <BasicTooltip\n        id={part.data.label}\n        value={part.formattedValue}\n        color={part.color}\n        enableChip={true}\n    />\n)\n","import { createElement, useMemo, useState, MouseEvent } from 'react'\nimport { line, area, curveBasis, curveLinear } from 'd3-shape'\nimport { ScaleLinear, scaleLinear } from 'd3-scale'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { useTheme, useValueFormatter } from '@nivo/core'\nimport { useAnnotations } from '@nivo/annotations'\nimport { useTooltip, TooltipActionsContextData } from '@nivo/tooltip'\nimport { svgDefaultProps as defaults } from './props'\nimport { PartTooltip, PartTooltipProps } from './PartTooltip'\nimport {\n    FunnelDatum,\n    FunnelCommonProps,\n    FunnelDataProps,\n    FunnelPart,\n    SeparatorProps,\n    FunnelCustomLayerProps,\n    FunnelAreaGenerator,\n    FunnelAreaPoint,\n    FunnelBorderGenerator,\n    Position,\n} from './types'\n\nexport const computeShapeGenerators = <D extends FunnelDatum>(\n    interpolation: FunnelCommonProps<D>['interpolation'],\n    direction: FunnelCommonProps<D>['direction']\n): [FunnelAreaGenerator, FunnelBorderGenerator] => {\n    // area generator which is used to draw funnel chart parts\n    const areaGenerator: FunnelAreaGenerator = area<FunnelAreaPoint>()\n    if (direction === 'vertical') {\n        areaGenerator\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n            .x0(d => d.x0)\n            .x1(d => d.x1)\n            .y(d => d.y)\n    } else {\n        areaGenerator\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n            .y0(d => d.y0)\n            .y1(d => d.y1)\n            .x(d => d.x)\n    }\n\n    return [\n        areaGenerator,\n        // we're using a different line generator to draw borders, this way\n        // we we don't have borders joining each side of the parts.\n        // it's important to have an empty point when defining the points\n        // to be used along with this, otherwise we'll get a line between both sides.\n        line<Position | null>()\n            .defined(d => d !== null)\n            .x(d => d!.x)\n            .y(d => d!.y)\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n    ]\n}\n\ninterface CustomBandScale {\n    (index: number): number\n    bandwidth: number\n}\n\nexport const computeScales = <D extends FunnelDatum>({\n    data,\n    direction,\n    width,\n    height,\n    spacing,\n}: {\n    data: FunnelDataProps<D>['data']\n    direction: FunnelCommonProps<D>['direction']\n    width: number\n    height: number\n    spacing: number\n}): [CustomBandScale, ScaleLinear<number, number>] => {\n    let bandScaleSize\n    let linearScaleSize\n    if (direction === 'vertical') {\n        bandScaleSize = height\n        linearScaleSize = width\n    } else {\n        bandScaleSize = width\n        linearScaleSize = height\n    }\n\n    const bandwidth = (bandScaleSize - spacing * (data.length - 1)) / data.length\n\n    // we're not using d3 band scale here to be able to get\n    // the actual paddingInner value in pixels, required to\n    // create centered separator lines between parts\n    const bandScale = (index: number) => spacing * index + bandwidth * index\n    bandScale.bandwidth = bandwidth\n\n    const allValues = data.map(d => d.value)\n\n    const linearScale = scaleLinear()\n        .domain([0, Math.max(...allValues)])\n        .range([0, linearScaleSize])\n\n    return [bandScale, linearScale]\n}\n\nexport const computeSeparators = <D extends FunnelDatum>({\n    parts,\n    direction,\n    width,\n    height,\n    spacing,\n    enableBeforeSeparators,\n    beforeSeparatorOffset,\n    enableAfterSeparators,\n    afterSeparatorOffset,\n}: {\n    parts: FunnelPart<D>[]\n    direction: FunnelCommonProps<D>['direction']\n    width: number\n    height: number\n    spacing: number\n    enableBeforeSeparators: boolean\n    beforeSeparatorOffset: number\n    enableAfterSeparators: boolean\n    afterSeparatorOffset: number\n}) => {\n    const beforeSeparators: SeparatorProps[] = []\n    const afterSeparators: SeparatorProps[] = []\n    const lastPart = parts[parts.length - 1]\n\n    if (direction === 'vertical') {\n        parts.forEach(part => {\n            const y = part.y0 - spacing / 2\n\n            if (enableBeforeSeparators) {\n                beforeSeparators.push({\n                    partId: part.data.id,\n                    x0: 0,\n                    x1: part.x0 - beforeSeparatorOffset,\n                    y0: y,\n                    y1: y,\n                })\n            }\n            if (enableAfterSeparators) {\n                afterSeparators.push({\n                    partId: part.data.id,\n                    x0: part.x1 + afterSeparatorOffset,\n                    x1: width,\n                    y0: y,\n                    y1: y,\n                })\n            }\n        })\n\n        const y = lastPart.y1\n        if (enableBeforeSeparators) {\n            beforeSeparators.push({\n                ...beforeSeparators[beforeSeparators.length - 1],\n                partId: 'none',\n                y0: y,\n                y1: y,\n            })\n        }\n        if (enableAfterSeparators) {\n            afterSeparators.push({\n                ...afterSeparators[afterSeparators.length - 1],\n                partId: 'none',\n                y0: y,\n                y1: y,\n            })\n        }\n    } else if (direction === 'horizontal') {\n        parts.forEach(part => {\n            const x = part.x0 - spacing / 2\n\n            beforeSeparators.push({\n                partId: part.data.id,\n                x0: x,\n                x1: x,\n                y0: 0,\n                y1: part.y0 - beforeSeparatorOffset,\n            })\n            afterSeparators.push({\n                partId: part.data.id,\n                x0: x,\n                x1: x,\n                y0: part.y1 + afterSeparatorOffset,\n                y1: height,\n            })\n        })\n\n        const x = lastPart.x1\n        beforeSeparators.push({\n            ...beforeSeparators[beforeSeparators.length - 1],\n            partId: 'none',\n            x0: x,\n            x1: x,\n        })\n        afterSeparators.push({\n            ...afterSeparators[afterSeparators.length - 1],\n            partId: 'none',\n            x0: x,\n            x1: x,\n        })\n    }\n\n    return [beforeSeparators, afterSeparators]\n}\n\nexport const computePartsHandlers = <D extends FunnelDatum>({\n    parts,\n    setCurrentPartId,\n    isInteractive,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    onClick,\n    showTooltipFromEvent,\n    hideTooltip,\n    tooltip = PartTooltip,\n}: {\n    parts: FunnelPart<D>[]\n    setCurrentPartId: (id: string | number | null) => void\n    isInteractive: FunnelCommonProps<D>['isInteractive']\n    onMouseEnter?: FunnelCommonProps<D>['onMouseEnter']\n    onMouseLeave?: FunnelCommonProps<D>['onMouseLeave']\n    onMouseMove?: FunnelCommonProps<D>['onMouseMove']\n    onClick?: FunnelCommonProps<D>['onClick']\n    showTooltipFromEvent: TooltipActionsContextData['showTooltipFromEvent']\n    hideTooltip: () => void\n    tooltip?: (props: PartTooltipProps<D>) => JSX.Element\n}) => {\n    if (!isInteractive) return parts\n\n    return parts.map(part => {\n        const boundOnMouseEnter = (event: MouseEvent) => {\n            setCurrentPartId(part.data.id)\n            showTooltipFromEvent(createElement(tooltip, { part }), event)\n            onMouseEnter !== undefined && onMouseEnter(part, event)\n        }\n\n        const boundOnMouseLeave = (event: MouseEvent) => {\n            setCurrentPartId(null)\n            hideTooltip()\n            onMouseLeave !== undefined && onMouseLeave(part, event)\n        }\n\n        const boundOnMouseMove = (event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, { part }), event)\n            onMouseMove !== undefined && onMouseMove(part, event)\n        }\n\n        const boundOnClick =\n            onClick !== undefined\n                ? (event: MouseEvent) => {\n                      onClick(part, event)\n                  }\n                : undefined\n\n        return {\n            ...part,\n            onMouseEnter: boundOnMouseEnter,\n            onMouseLeave: boundOnMouseLeave,\n            onMouseMove: boundOnMouseMove,\n            onClick: boundOnClick,\n        }\n    })\n}\n\n/**\n * Creates required layout to generate a funnel chart,\n * it uses almost the same parameters as the Funnel component.\n *\n * For purpose/constrains on the parameters, please have a look\n * at the component's props.\n */\nexport const useFunnel = <D extends FunnelDatum>({\n    data,\n    width,\n    height,\n    direction = defaults.direction,\n    interpolation = defaults.interpolation,\n    spacing = defaults.spacing,\n    shapeBlending: rawShapeBlending = defaults.shapeBlending,\n    valueFormat,\n    colors = defaults.colors,\n    fillOpacity = defaults.fillOpacity,\n    borderWidth = defaults.borderWidth,\n    borderColor = defaults.borderColor,\n    borderOpacity = defaults.borderOpacity,\n    labelColor = defaults.labelColor,\n    enableBeforeSeparators = defaults.enableBeforeSeparators,\n    beforeSeparatorLength = defaults.beforeSeparatorLength,\n    beforeSeparatorOffset = defaults.beforeSeparatorOffset,\n    enableAfterSeparators = defaults.enableAfterSeparators,\n    afterSeparatorLength = defaults.afterSeparatorLength,\n    afterSeparatorOffset = defaults.afterSeparatorOffset,\n    isInteractive = defaults.isInteractive,\n    currentPartSizeExtension = defaults.currentPartSizeExtension,\n    currentBorderWidth,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: {\n    data: FunnelDataProps<D>['data']\n    width: number\n    height: number\n    direction?: FunnelCommonProps<D>['direction']\n    interpolation?: FunnelCommonProps<D>['interpolation']\n    spacing?: FunnelCommonProps<D>['spacing']\n    shapeBlending?: FunnelCommonProps<D>['shapeBlending']\n    valueFormat?: FunnelCommonProps<D>['valueFormat']\n    colors?: FunnelCommonProps<D>['colors']\n    fillOpacity?: FunnelCommonProps<D>['fillOpacity']\n    borderWidth?: FunnelCommonProps<D>['borderWidth']\n    borderColor?: FunnelCommonProps<D>['borderColor']\n    borderOpacity?: FunnelCommonProps<D>['borderOpacity']\n    labelColor?: FunnelCommonProps<D>['labelColor']\n    enableBeforeSeparators?: FunnelCommonProps<D>['enableBeforeSeparators']\n    beforeSeparatorLength?: FunnelCommonProps<D>['beforeSeparatorLength']\n    beforeSeparatorOffset?: FunnelCommonProps<D>['beforeSeparatorOffset']\n    enableAfterSeparators?: FunnelCommonProps<D>['enableAfterSeparators']\n    afterSeparatorLength?: FunnelCommonProps<D>['afterSeparatorLength']\n    afterSeparatorOffset?: FunnelCommonProps<D>['afterSeparatorOffset']\n    isInteractive?: FunnelCommonProps<D>['isInteractive']\n    currentPartSizeExtension?: FunnelCommonProps<D>['currentPartSizeExtension']\n    currentBorderWidth?: FunnelCommonProps<D>['currentBorderWidth']\n    onMouseEnter?: FunnelCommonProps<D>['onMouseEnter']\n    onMouseMove?: FunnelCommonProps<D>['onMouseMove']\n    onMouseLeave?: FunnelCommonProps<D>['onMouseLeave']\n    onClick?: FunnelCommonProps<D>['onClick']\n    tooltip?: (props: PartTooltipProps<D>) => JSX.Element\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<D>(colors, 'id')\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getLabelColor = useInheritedColor(labelColor, theme)\n\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const [areaGenerator, borderGenerator] = useMemo(\n        () => computeShapeGenerators<D>(interpolation, direction),\n        [interpolation, direction]\n    )\n\n    let innerWidth: number\n    let innerHeight: number\n    const paddingBefore = enableBeforeSeparators ? beforeSeparatorLength + beforeSeparatorOffset : 0\n    const paddingAfter = enableAfterSeparators ? afterSeparatorLength + afterSeparatorOffset : 0\n    if (direction === 'vertical') {\n        innerWidth = width - paddingBefore - paddingAfter\n        innerHeight = height\n    } else {\n        innerWidth = width\n        innerHeight = height - paddingBefore - paddingAfter\n    }\n\n    const [bandScale, linearScale] = useMemo(\n        () =>\n            computeScales<D>({\n                data,\n                direction,\n                width: innerWidth,\n                height: innerHeight,\n                spacing,\n            }),\n        [data, direction, innerWidth, innerHeight, spacing]\n    )\n\n    const [currentPartId, setCurrentPartId] = useState<string | number | null>(null)\n\n    const parts: FunnelPart<D>[] = useMemo(() => {\n        const enhancedParts = data.map((datum, index) => {\n            const isCurrent = datum.id === currentPartId\n\n            let partWidth\n            let partHeight\n            let y0, x0\n\n            if (direction === 'vertical') {\n                partWidth = linearScale(datum.value)\n                partHeight = bandScale.bandwidth\n                x0 = paddingBefore + (innerWidth - partWidth) * 0.5\n                y0 = bandScale(index)\n            } else {\n                partWidth = bandScale.bandwidth\n                partHeight = linearScale(datum.value)\n                x0 = bandScale(index)\n                y0 = paddingBefore + (innerHeight - partHeight) * 0.5\n            }\n\n            const x1 = x0 + partWidth\n            const x = x0 + partWidth * 0.5\n            const y1 = y0 + partHeight\n            const y = y0 + partHeight * 0.5\n\n            const part: FunnelPart<D> = {\n                data: datum,\n                width: partWidth,\n                height: partHeight,\n                color: getColor(datum),\n                fillOpacity,\n                borderWidth:\n                    isCurrent && currentBorderWidth !== undefined\n                        ? currentBorderWidth\n                        : borderWidth,\n                borderOpacity,\n                formattedValue: formatValue(datum.value),\n                isCurrent,\n                x,\n                x0,\n                x1,\n                y,\n                y0,\n                y1,\n                borderColor: '',\n                labelColor: '',\n                points: [],\n                areaPoints: [],\n                borderPoints: [],\n            }\n\n            part.borderColor = getBorderColor(part)\n            part.labelColor = getLabelColor(part)\n\n            return part\n        })\n\n        const shapeBlending = rawShapeBlending / 2\n\n        enhancedParts.forEach((part, index) => {\n            const nextPart = enhancedParts[index + 1]\n\n            if (direction === 'vertical') {\n                part.points.push({ x: part.x0, y: part.y0 })\n                part.points.push({ x: part.x1, y: part.y0 })\n                if (nextPart) {\n                    part.points.push({ x: nextPart.x1, y: part.y1 })\n                    part.points.push({ x: nextPart.x0, y: part.y1 })\n                } else {\n                    part.points.push({ x: part.points[1].x, y: part.y1 })\n                    part.points.push({ x: part.points[0].x, y: part.y1 })\n                }\n                if (part.isCurrent) {\n                    part.points[0].x -= currentPartSizeExtension\n                    part.points[1].x += currentPartSizeExtension\n                    part.points[2].x += currentPartSizeExtension\n                    part.points[3].x -= currentPartSizeExtension\n                }\n\n                part.areaPoints = [\n                    {\n                        x: 0,\n                        x0: part.points[0].x,\n                        x1: part.points[1].x,\n                        y: part.y0,\n                        y0: 0,\n                        y1: 0,\n                    },\n                ]\n                part.areaPoints.push({\n                    ...part.areaPoints[0],\n                    y: part.y0 + part.height * shapeBlending,\n                })\n                const lastAreaPoint = {\n                    x: 0,\n                    x0: part.points[3].x,\n                    x1: part.points[2].x,\n                    y: part.y1,\n                    y0: 0,\n                    y1: 0,\n                }\n                part.areaPoints.push({\n                    ...lastAreaPoint,\n                    y: part.y1 - part.height * shapeBlending,\n                })\n                part.areaPoints.push(lastAreaPoint)\n                ;[0, 1, 2, 3].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x0,\n                        y: part.areaPoints[index].y,\n                    })\n                })\n                part.borderPoints.push(null)\n                ;[3, 2, 1, 0].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x1,\n                        y: part.areaPoints[index].y,\n                    })\n                })\n            } else {\n                part.points.push({ x: part.x0, y: part.y0 })\n                if (nextPart) {\n                    part.points.push({ x: part.x1, y: nextPart.y0 })\n                    part.points.push({ x: part.x1, y: nextPart.y1 })\n                } else {\n                    part.points.push({ x: part.x1, y: part.y0 })\n                    part.points.push({ x: part.x1, y: part.y1 })\n                }\n                part.points.push({ x: part.x0, y: part.y1 })\n                if (part.isCurrent) {\n                    part.points[0].y -= currentPartSizeExtension\n                    part.points[1].y -= currentPartSizeExtension\n                    part.points[2].y += currentPartSizeExtension\n                    part.points[3].y += currentPartSizeExtension\n                }\n\n                part.areaPoints = [\n                    {\n                        x: part.x0,\n                        x0: 0,\n                        x1: 0,\n                        y: 0,\n                        y0: part.points[0].y,\n                        y1: part.points[3].y,\n                    },\n                ]\n                part.areaPoints.push({\n                    ...part.areaPoints[0],\n                    x: part.x0 + part.width * shapeBlending,\n                })\n                const lastAreaPoint = {\n                    x: part.x1,\n                    x0: 0,\n                    x1: 0,\n                    y: 0,\n                    y0: part.points[1].y,\n                    y1: part.points[2].y,\n                }\n                part.areaPoints.push({\n                    ...lastAreaPoint,\n                    x: part.x1 - part.width * shapeBlending,\n                })\n                part.areaPoints.push(lastAreaPoint)\n                ;[0, 1, 2, 3].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x,\n                        y: part.areaPoints[index].y0,\n                    })\n                })\n                part.borderPoints.push(null)\n                ;[3, 2, 1, 0].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x,\n                        y: part.areaPoints[index].y1,\n                    })\n                })\n            }\n        })\n\n        return enhancedParts\n    }, [\n        data,\n        direction,\n        linearScale,\n        bandScale,\n        innerWidth,\n        innerHeight,\n        paddingBefore,\n        paddingAfter,\n        rawShapeBlending,\n        getColor,\n        formatValue,\n        getBorderColor,\n        getLabelColor,\n        currentPartId,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const partsWithHandlers = useMemo(\n        () =>\n            computePartsHandlers<D>({\n                parts,\n                setCurrentPartId,\n                isInteractive,\n                onMouseEnter,\n                onMouseLeave,\n                onMouseMove,\n                onClick,\n                showTooltipFromEvent,\n                hideTooltip,\n                tooltip,\n            }),\n        [\n            parts,\n            setCurrentPartId,\n            isInteractive,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseMove,\n            onClick,\n            showTooltipFromEvent,\n            hideTooltip,\n            tooltip,\n        ]\n    )\n\n    const [beforeSeparators, afterSeparators] = useMemo(\n        () =>\n            computeSeparators({\n                parts,\n                direction,\n                width,\n                height,\n                spacing,\n                enableBeforeSeparators,\n                beforeSeparatorOffset,\n                enableAfterSeparators,\n                afterSeparatorOffset,\n            }),\n        [\n            parts,\n            direction,\n            width,\n            height,\n            spacing,\n            enableBeforeSeparators,\n            beforeSeparatorOffset,\n            enableAfterSeparators,\n            afterSeparatorOffset,\n        ]\n    )\n\n    const customLayerProps: FunnelCustomLayerProps<D> = useMemo(\n        () => ({\n            width,\n            height,\n            parts: partsWithHandlers,\n            areaGenerator,\n            borderGenerator,\n            beforeSeparators,\n            afterSeparators,\n            setCurrentPartId,\n        }),\n        [\n            width,\n            height,\n            partsWithHandlers,\n            areaGenerator,\n            borderGenerator,\n            beforeSeparators,\n            afterSeparators,\n            setCurrentPartId,\n        ]\n    )\n\n    return {\n        parts: partsWithHandlers,\n        areaGenerator,\n        borderGenerator,\n        beforeSeparators,\n        afterSeparators,\n        setCurrentPartId,\n        currentPartId,\n        customLayerProps,\n    }\n}\n\nexport const useFunnelAnnotations = <D extends FunnelDatum>(\n    parts: FunnelPart<D>[],\n    annotations: FunnelCommonProps<D>['annotations']\n) =>\n    useAnnotations<FunnelPart<D>>({\n        data: parts,\n        annotations,\n        getPosition: part => ({\n            x: part.x,\n            y: part.y,\n        }),\n        getDimensions: (part: FunnelPart<D>) => {\n            const width = part.width\n            const height = part.height\n\n            return { size: Math.max(width, height), width, height }\n        },\n    })\n","import { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport {\n    FunnelDatum,\n    FunnelPartWithHandlers,\n    FunnelAreaGenerator,\n    FunnelBorderGenerator,\n} from './types'\n\nexport interface PartProps<D extends FunnelDatum> {\n    part: FunnelPartWithHandlers<D>\n    areaGenerator: FunnelAreaGenerator\n    borderGenerator: FunnelBorderGenerator\n}\n\nexport const Part = <D extends FunnelDatum>({\n    part,\n    areaGenerator,\n    borderGenerator,\n}: PartProps<D>) => {\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedAreaPath = useAnimatedPath(areaGenerator(part.areaPoints) as string)\n    const animatedBorderPath = useAnimatedPath(borderGenerator(part.borderPoints) as string)\n    const animatedProps = useSpring({\n        areaColor: part.color,\n        borderWidth: part.borderWidth,\n        borderColor: part.borderColor,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {part.borderWidth > 0 && (\n                <animated.path\n                    d={animatedBorderPath}\n                    stroke={animatedProps.borderColor}\n                    strokeWidth={animatedProps.borderWidth}\n                    strokeOpacity={part.borderOpacity}\n                    fill=\"none\"\n                />\n            )}\n            <animated.path\n                d={animatedAreaPath}\n                fill={animatedProps.areaColor}\n                fillOpacity={part.fillOpacity}\n                onMouseEnter={part.onMouseEnter}\n                onMouseLeave={part.onMouseLeave}\n                onMouseMove={part.onMouseMove}\n                onClick={part.onClick}\n            />\n        </>\n    )\n}\n","import { Part } from './Part'\nimport {\n    FunnelPartWithHandlers,\n    FunnelAreaGenerator,\n    FunnelBorderGenerator,\n    FunnelDatum,\n} from './types'\n\ninterface PartsProps<D extends FunnelDatum> {\n    parts: FunnelPartWithHandlers<D>[]\n    areaGenerator: FunnelAreaGenerator\n    borderGenerator: FunnelBorderGenerator\n}\n\nexport const Parts = <D extends FunnelDatum>({\n    parts,\n    areaGenerator,\n    borderGenerator,\n}: PartsProps<D>) => (\n    <>\n        {parts.map(part => (\n            <Part<D>\n                key={part.data.id}\n                part={part}\n                areaGenerator={areaGenerator}\n                borderGenerator={borderGenerator}\n            />\n        ))}\n    </>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface PartLabelProps<D extends FunnelDatum> {\n    part: FunnelPart<D>\n}\n\nexport const PartLabel = <D extends FunnelDatum>({ part }: PartLabelProps<D>) => {\n    const theme = useTheme()\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${part.x}, ${part.y})`,\n        color: part.labelColor,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: animatedProps.color,\n                    pointerEvents: 'none',\n                }}\n            >\n                {part.formattedValue}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { PartLabel } from './PartLabel'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface PartLabelsProps<D extends FunnelDatum> {\n    parts: FunnelPart<D>[]\n}\n\nexport const PartLabels = <D extends FunnelDatum>({ parts }: PartLabelsProps<D>) => (\n    <>\n        {parts.map(part => (\n            <PartLabel key={part.data.id} part={part} />\n        ))}\n    </>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { SeparatorProps as SeparatorType } from './types'\n\ninterface SeparatorProps {\n    separator: SeparatorType\n}\n\nexport const Separator = ({ separator }: SeparatorProps) => {\n    const theme = useTheme()\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x1: separator.x0,\n        x2: separator.x1,\n        y1: separator.y0,\n        y2: separator.y1,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.line\n            x1={animatedProps.x1}\n            x2={animatedProps.x2}\n            y1={animatedProps.y1}\n            y2={animatedProps.y2}\n            fill=\"none\"\n            {...(theme.grid.line as any)}\n        />\n    )\n}\n","import { Separator } from './Separator'\nimport { SeparatorProps as SeparatorType } from './types'\n\ninterface SeparatorsProps {\n    beforeSeparators: SeparatorType[]\n    afterSeparators: SeparatorType[]\n}\n\nexport const Separators = ({ beforeSeparators, afterSeparators }: SeparatorsProps) => (\n    <>\n        {beforeSeparators.map(separator => (\n            <Separator key={separator.partId} separator={separator} />\n        ))}\n        {afterSeparators.map(separator => (\n            <Separator key={separator.partId} separator={separator} />\n        ))}\n    </>\n)\n","import { Annotation } from '@nivo/annotations'\nimport { useFunnelAnnotations } from './hooks'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface FunnelAnnotationsProps<D extends FunnelDatum> {\n    parts: FunnelPart<D>[]\n    annotations: any[]\n}\n\nexport const FunnelAnnotations = <D extends FunnelDatum>({\n    parts,\n    annotations,\n}: FunnelAnnotationsProps<D>) => {\n    const boundAnnotations = useFunnelAnnotations<D>(parts, annotations)\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { SvgWrapper, Container, useDimensions } from '@nivo/core'\nimport { svgDefaultProps } from './props'\nimport { useFunnel } from './hooks'\nimport { Parts } from './Parts'\nimport { PartLabels } from './PartLabels'\nimport { Separators } from './Separators'\nimport { FunnelAnnotations } from './FunnelAnnotations'\nimport { FunnelDatum, FunnelLayerId, FunnelSvgProps } from './types'\n\ntype InnerFunnelProps<D extends FunnelDatum> = Omit<\n    FunnelSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerFunnel = <D extends FunnelDatum>({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    direction = svgDefaultProps.direction,\n    interpolation = svgDefaultProps.interpolation,\n    spacing = svgDefaultProps.spacing,\n    shapeBlending = svgDefaultProps.shapeBlending,\n    valueFormat,\n    colors = svgDefaultProps.colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n    borderOpacity = svgDefaultProps.borderOpacity,\n    enableLabel = svgDefaultProps.enableLabel,\n    labelColor = svgDefaultProps.labelColor,\n    enableBeforeSeparators = svgDefaultProps.enableBeforeSeparators,\n    beforeSeparatorLength = svgDefaultProps.beforeSeparatorLength,\n    beforeSeparatorOffset = svgDefaultProps.beforeSeparatorOffset,\n    enableAfterSeparators = svgDefaultProps.enableAfterSeparators,\n    afterSeparatorLength = svgDefaultProps.afterSeparatorLength,\n    afterSeparatorOffset = svgDefaultProps.afterSeparatorOffset,\n    layers = svgDefaultProps.layers,\n    annotations = svgDefaultProps.annotations,\n    isInteractive = svgDefaultProps.isInteractive,\n    currentPartSizeExtension = svgDefaultProps.currentPartSizeExtension,\n    currentBorderWidth,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerFunnelProps<D>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        areaGenerator,\n        borderGenerator,\n        parts,\n        beforeSeparators,\n        afterSeparators,\n        customLayerProps,\n    } = useFunnel<D>({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        direction,\n        interpolation,\n        spacing,\n        shapeBlending,\n        valueFormat,\n        colors,\n        fillOpacity,\n        borderWidth,\n        borderColor,\n        borderOpacity,\n        labelColor,\n        enableBeforeSeparators,\n        beforeSeparatorLength,\n        beforeSeparatorOffset,\n        enableAfterSeparators,\n        afterSeparatorLength,\n        afterSeparatorOffset,\n        isInteractive,\n        currentPartSizeExtension,\n        currentBorderWidth,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    const layerById: Record<FunnelLayerId, ReactNode> = {\n        separators: null,\n        parts: null,\n        annotations: null,\n        labels: null,\n    }\n\n    if (layers.includes('separators')) {\n        layerById.separators = (\n            <Separators\n                key=\"separators\"\n                beforeSeparators={beforeSeparators}\n                afterSeparators={afterSeparators}\n            />\n        )\n    }\n\n    if (layers.includes('parts')) {\n        layerById.parts = (\n            <Parts<D>\n                key=\"parts\"\n                parts={parts}\n                areaGenerator={areaGenerator}\n                borderGenerator={borderGenerator}\n            />\n        )\n    }\n\n    if (layers?.includes('annotations')) {\n        layerById.annotations = (\n            <FunnelAnnotations<D> key=\"annotations\" parts={parts} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('labels') && enableLabel) {\n        layerById.labels = <PartLabels<D> key=\"labels\" parts={parts} />\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Funnel = <D extends FunnelDatum = FunnelDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: FunnelSvgProps<D>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerFunnel<D> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { FunnelDatum, FunnelSvgProps } from './types'\nimport { Funnel } from './Funnel'\n\nexport const ResponsiveFunnel = <D extends FunnelDatum = FunnelDatum>(\n    props: Omit<FunnelSvgProps<D>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Funnel<D> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}