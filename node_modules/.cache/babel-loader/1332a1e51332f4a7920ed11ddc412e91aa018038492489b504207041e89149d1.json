{"ast":null,"code":"/* This file contains functions that help building the chart with D3.js*/\n\n/**\r\nFunction to draw the X axis on the chart.\r\n@param {Object} svg - The SVG element to append the X axis to.\r\n@param {number} chartHeight - The height of the chart.\r\n@param {Object} xAxis - The X axis to draw.\r\n*/\nexport function drawXAxis(svg, chartHeight, xAxis) {\n  svg.select(\".x-axis\").attr(\"transform\", `translate(0, ${chartHeight})`).call(xAxis);\n}\n\n/**\r\nFunction to draw the Y axis on the chart.\r\n@param {Object} svg - The SVG element to append the Y axis to.\r\n@param {Object} yAxis - The Y axis to draw.\r\n@param {Object} yAxisPopulation - The Y axis for population values.\r\n@param {number} marginLeft - The left margin of the chart.\r\n*/\nexport function drawYAxis(svg, yAxis, yAxisPopulation, marginLeft) {\n  svg.select(\".y-axis\").call(yAxis);\n  svg.select(\".y-axis-population\").attr(\"transform\", `translate(${marginLeft - 10}, 0)`).call(yAxisPopulation).append(\"text\").attr(\"x\", 2).attr(\"y\", yAxisPopulation(yAxisPopulation.ticks().pop()) + 0.5).attr(\"dy\", \"0.32em\").attr(\"fill\", \"#666\").attr(\"font-weight\", \"bold\").attr(\"text-anchor\", \"start\").text(\"Population\");\n}\n\n/**\r\nFunction to draw the bars on the chart.\r\n@param {Object} svg - The SVG element to append the bars to.\r\n@param {Array} data - The data to use to draw the bars.\r\n@param {Object} x - The X scale used for the chart.\r\n@param {Object} y - The Y scale used for the chart.\r\n@param {number} chartHeight - The height of the chart.\r\n*/\nexport function drawBars(svg, data, x, y, chartHeight) {\n  const bars = svg.selectAll(\".bar\").data(data, d => d.Year);\n  bars.enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => x(new Date(d.Year).getFullYear())).attr(\"y\", chartHeight).attr(\"width\", x.bandwidth()).attr(\"height\", 0).style(\"opacity\", 0).merge(bars).transition().duration(900).attr(\"x\", d => x(new Date(d.Year).getFullYear())).attr(\"y\", d => y(d.Population)).attr(\"width\", x.bandwidth()).attr(\"height\", d => chartHeight - y(d.Population)).style(\"opacity\", 1);\n  bars.exit().transition().duration(900).attr(\"y\", chartHeight).attr(\"height\", 0).style(\"opacity\", 0).remove();\n}","map":{"version":3,"names":["drawXAxis","svg","chartHeight","xAxis","select","attr","call","drawYAxis","yAxis","yAxisPopulation","marginLeft","append","ticks","pop","text","drawBars","data","x","y","bars","selectAll","d","Year","enter","Date","getFullYear","bandwidth","style","merge","transition","duration","Population","exit","remove"],"sources":["C:/Users/JonsMendi/Desktop/Personal/Coding-Challenges/eye-able-chart/eye-able-chart/src/components/Chart/chart-helpers.js"],"sourcesContent":["/* This file contains functions that help building the chart with D3.js*/\r\n\r\n/**\r\nFunction to draw the X axis on the chart.\r\n@param {Object} svg - The SVG element to append the X axis to.\r\n@param {number} chartHeight - The height of the chart.\r\n@param {Object} xAxis - The X axis to draw.\r\n*/\r\nexport function drawXAxis(svg, chartHeight, xAxis) {\r\n  svg.select(\".x-axis\")\r\n    .attr(\"transform\", `translate(0, ${chartHeight})`)\r\n    .call(xAxis);\r\n}\r\n\r\n/**\r\nFunction to draw the Y axis on the chart.\r\n@param {Object} svg - The SVG element to append the Y axis to.\r\n@param {Object} yAxis - The Y axis to draw.\r\n@param {Object} yAxisPopulation - The Y axis for population values.\r\n@param {number} marginLeft - The left margin of the chart.\r\n*/\r\nexport function drawYAxis(svg, yAxis, yAxisPopulation, marginLeft) {\r\n  svg.select(\".y-axis\")\r\n    .call(yAxis);\r\n  svg.select(\".y-axis-population\")\r\n    .attr(\"transform\", `translate(${marginLeft - 10}, 0)`)\r\n    .call(yAxisPopulation)\r\n    .append(\"text\")\r\n    .attr(\"x\", 2)\r\n    .attr(\"y\", yAxisPopulation(yAxisPopulation.ticks().pop()) + 0.5)\r\n    .attr(\"dy\", \"0.32em\")\r\n    .attr(\"fill\", \"#666\")\r\n    .attr(\"font-weight\", \"bold\")\r\n    .attr(\"text-anchor\", \"start\")\r\n    .text(\"Population\");\r\n}\r\n\r\n/**\r\nFunction to draw the bars on the chart.\r\n@param {Object} svg - The SVG element to append the bars to.\r\n@param {Array} data - The data to use to draw the bars.\r\n@param {Object} x - The X scale used for the chart.\r\n@param {Object} y - The Y scale used for the chart.\r\n@param {number} chartHeight - The height of the chart.\r\n*/\r\nexport function drawBars(svg, data, x, y, chartHeight) {\r\n  const bars = svg.selectAll(\".bar\")\r\n    .data(data, (d) => d.Year);\r\n\r\n  bars.enter()\r\n    .append(\"rect\")\r\n    .attr(\"class\", \"bar\")\r\n    .attr(\"x\", (d) => x(new Date(d.Year).getFullYear()))\r\n    .attr(\"y\", chartHeight)\r\n    .attr(\"width\", x.bandwidth())\r\n    .attr(\"height\", 0)\r\n    .style(\"opacity\", 0)\r\n    .merge(bars)\r\n    .transition()\r\n    .duration(900)\r\n    .attr(\"x\", (d) => x(new Date(d.Year).getFullYear()))\r\n    .attr(\"y\", (d) => y(d.Population))\r\n    .attr(\"width\", x.bandwidth())\r\n    .attr(\"height\", (d) => chartHeight - y(d.Population))\r\n    .style(\"opacity\", 1);\r\n\r\n  bars.exit()\r\n    .transition()\r\n    .duration(900)\r\n    .attr(\"y\", chartHeight)\r\n    .attr(\"height\", 0)\r\n    .style(\"opacity\", 0)\r\n    .remove();\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}