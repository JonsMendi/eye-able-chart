{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JonsMendi\\\\Desktop\\\\Personal\\\\Coding-Challenges\\\\eye-able-chart\\\\eye-able-chart\\\\src\\\\components\\\\Body.jsx\",\n  _s = $RefreshSig$();\nimport \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport BarChart from \"./Chart/BarChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Body() {\n  _s();\n  const [population, setPopulation] = useState([]);\n  const [yearFilter, setYearFilter] = useState(null);\n  const [userData, setUserData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Population\",\n      data: []\n    }]\n  });\n  async function fetchPopulation() {\n    const response = await fetch('https://datausa.io/api/data?drilldowns=Nation&measures=Population');\n    const data = await response.json();\n    setPopulation(data.data);\n  }\n  useEffect(() => {\n    fetchPopulation();\n  }, []);\n  function handleYearFilterChange(event) {\n    setYearFilter(parseInt(event.target.value));\n  }\n  useEffect(() => {\n    setUserData({\n      labels: population.map(data => data.Year),\n      datasets: [{\n        label: \"Population\",\n        data: population.map(data => data.Population)\n      }]\n    });\n  }, [population]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"USA Population\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Filter by year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: \"\",\n        onChange: handleYearFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: null,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 3,\n          children: \"Last 3 years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"Last 5 years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Last 10 years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      chartData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Body, \"12oxr/pdUp2tZoP7pyhR8d8pZj4=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["useState","useEffect","BarChart","jsxDEV","_jsxDEV","Body","_s","population","setPopulation","yearFilter","setYearFilter","userData","setUserData","labels","datasets","label","data","fetchPopulation","response","fetch","json","handleYearFilterChange","event","parseInt","target","value","map","Year","Population","className","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","onChange","chartData","_c","$RefreshReg$"],"sources":["C:/Users/JonsMendi/Desktop/Personal/Coding-Challenges/eye-able-chart/eye-able-chart/src/components/Body.jsx"],"sourcesContent":["import \"../App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport BarChart from \"./Chart/BarChart\";\r\n\r\nfunction Body() {\r\n  const [population, setPopulation] = useState([]);\r\n  const [yearFilter, setYearFilter] = useState(null);\r\n  const [userData, setUserData] = useState({\r\n    labels: [],\r\n    datasets: [{\r\n      label: \"Population\",\r\n      data: []\r\n    }]\r\n  })\r\n\r\n  async function fetchPopulation() {\r\n    const response = await fetch('https://datausa.io/api/data?drilldowns=Nation&measures=Population');\r\n    const data = await response.json();\r\n    setPopulation(data.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPopulation();\r\n  }, []);\r\n\r\n  function handleYearFilterChange(event) {\r\n    setYearFilter(parseInt(event.target.value));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setUserData({\r\n      labels: population.map((data) => data.Year),\r\n      datasets: [{\r\n        label: \"Population\",\r\n        data: population.map((data) => data.Population)\r\n      }]\r\n    });\r\n  }, [population]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>USA Population</h1>\r\n      <label>\r\n        Filter by year:\r\n        <select defaultValue=\"\" onChange={handleYearFilterChange}>\r\n          <option value={null}>All</option>\r\n          <option value={3}>Last 3 years</option>\r\n          <option value={5}>Last 5 years</option>\r\n          <option value={10}>Last 10 years</option>\r\n        </select>\r\n      </label>\r\n      <BarChart chartData={userData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}